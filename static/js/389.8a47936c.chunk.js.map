{"version":3,"file":"static/js/389.8a47936c.chunk.js","mappings":"sUAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IACaC,EAAY,kCAEnBC,EAAcF,EAAAA,EAAAA,OAAa,CAC/BG,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAiB,mCAAG,+FACzBC,EADyB,qCAXrB,oCAWqB,SAEAR,EAAAA,EAAAA,IAAUQ,GAFV,uBAEjBC,EAFiB,EAEvBC,KAFuB,kBAGxBD,GAHwB,2CAAH,qDAMjBE,EAAe,mCAAG,WAAMC,GAAN,yFACNV,EAAYW,IAAZ,iBAA0BD,IADpB,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAY,mCAAG,WAAMF,GAAN,yFACHV,EAAYW,IAAZ,iBAA0BD,EAA1B,aADG,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,EAAKK,MAFc,2CAAH,sDAKZC,EAAc,mCAAG,WAAMJ,GAAN,yFACLV,EAAYW,IAAZ,iBAA0BD,EAA1B,aADK,uBACpBF,EADoB,EACpBA,KADoB,kBAErBA,EAAKO,SAFgB,2CAAH,sDAKdC,EAAe,mCAAG,WAAMC,GAAN,yFACNjB,EAAYW,IAAI,gBAAiB,CACtDT,OAAQ,CAAEe,MAAAA,KAFiB,uBACrBT,EADqB,EACrBA,KADqB,kBAItBA,EAAKO,SAJiB,2CAAH,qD,6ICnC5B,EAAuB,2BAAvB,EAA8D,gCAA9D,EAAiH,uCAAjH,EAA4K,wC,SCoE5K,EA9DoB,WAClB,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXP,EAAQI,EAAaV,IAAI,UAE/Bc,EAAAA,EAAAA,YAAU,WACR,GAAI,OAACR,QAAD,IAACA,GAAAA,EAAOS,OAAZ,CAGA,IAAMC,EAAW,mCAAG,WAAMV,GAAN,iGAEaD,EAAAA,EAAAA,IAAgBC,GAF7B,OAEVW,EAFU,OAGhBT,EAAUS,GAHM,gDAKhBC,QAAQC,IAAR,MALgB,yDAAH,sDAQjBH,EAAYV,EATX,CAUF,GAAE,CAACA,IAYJ,OACE,iCACE,mBAAQc,UAAWC,EAAnB,UACM,kBAAMC,SAZK,SAAAC,GACnBA,EAAIC,iBACmC,KAAnCD,EAAIE,cAAcC,OAAOC,OAC3BC,MAAM,4BAERjB,EAAgB,CAAEL,MAAOiB,EAAIE,cAAcC,OAAOC,QAClDJ,EAAIM,OAAOC,OACZ,EAKuCV,UAAWC,EAAzC,WACA,kBAAOU,KAAK,SAASC,YAAY,eAAeZ,UAAWC,EAAwBY,SAAU,SAAAC,GAAC,OAAIvB,EAAgB,CAAEL,MAAO4B,EAAEL,OAAOF,OAAtC,KAC1F,mBAAQQ,KAAK,SAASf,UAAWC,EAAjC,yBAKTzB,EAAOwC,KACF,gBACIrC,EADJ,EACIA,GACAsC,EAFJ,EAEIA,MAFJ,OAII,yBACI,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAavC,GAAMwC,MAAO,CAAEC,KAAM5B,GAA1C,UACI,uBAAIyB,SAHPtC,EAJb,IAVR,MA0BH,C","sources":["api/movie-api.js","webpack://react-homework-template/./src/pages/SearchMoviesPages/SearchMovies.module.css?28ec","pages/SearchMoviesPages/SearchMovies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = '683658afe0d3dabfd9c8a37c2044350b';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst getAxiosApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '683658afe0d3dabfd9c8a37c2044350b',\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const trendMovieURL = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(trendMovieURL);\n  return movies;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await getAxiosApi.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await getAxiosApi.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReview = async id => {\n  const { data } = await getAxiosApi.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await getAxiosApi.get('/search/movie', {\n    params: { query },\n  });\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchMovies_form__Q3Mob\",\"searchbar\":\"SearchMovies_searchbar__kGKlR\",\"searchForm_input\":\"SearchMovies_searchForm_input__PQPHu\",\"searchForm_button\":\"SearchMovies_searchForm_button__VNPES\",\"searchForm_button__label\":\"SearchMovies_searchForm_button__label__Y4Yge\"};","import { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'api/movie-api';\n\nimport style from './SearchMovies.module.css';\nimport { useEffect } from 'react';\n\nconst SearchMovie = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query?.trim()) {\n      return;\n    }\n    const fetchTrends = async query => {\n      try {\n        const receivedMovies = await getSearchMovies(query);\n        setMovies(receivedMovies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTrends(query);\n  }, [query]);\n\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (evt.currentTarget.search.value === '') {\n      alert('Fill in the input field!');\n    }\n    setSearchParams({ query: evt.currentTarget.search.value });\n    evt.target.reset();\n  };\n\n  return (\n    <>\n      <header className={style.searchbar}>\n            <form onSubmit={handleSubmit} className={style.form}>\n            <input name=\"search\" placeholder=\"Search movie\" className={style.searchForm_input} onChange={e => setSearchParams({ query: e.target.value })} />\n                <button type='submit' className={style.searchForm_button}>\n                    Search\n                </button>\n            </form>\n        </header>\n      {movies.map(\n            ({\n                id, \n                title,\n            }) => (\n                <ul key={id}>\n                    <li >\n                        <Link to={`/movies/${id}`} state={{ from: location }}>\n                            <p>{title}</p>\n                        </Link>\n                    </li>\n                </ul>\n\n            )\n            )};\n    </>\n  );\n};\n\nexport default SearchMovie;\n\n"],"names":["axios","IMAGE_URL","getAxiosApi","baseURL","params","api_key","language","getTrendingMovies","trendMovieURL","movies","data","getMovieDetails","id","get","getMovieCast","cast","getMovieReview","results","getSearchMovies","query","useState","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","trim","fetchTrends","receivedMovies","console","log","className","style","onSubmit","evt","preventDefault","currentTarget","search","value","alert","target","reset","name","placeholder","onChange","e","type","map","title","to","state","from"],"sourceRoot":""}